version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=awsview
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aws-viewer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=awsview
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - JWT_SECRET_KEY=your-secret-key-here
      - CORS_ORIGINS=http://localhost:80
    depends_on:
      db:
        condition: service_healthy
    networks:
      - aws-viewer-network

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - aws-viewer-network

networks:
  aws-viewer-network:
    driver: bridge

volumes:
  postgres_data: 